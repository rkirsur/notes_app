{"ast":null,"code":"var _jsxFileName = \"/Users/ritukirsur/Coding/notes-app/react-notes-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport NewNote from './components/NewNote';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst notes = [];\nfunction App() {\n  _s();\n  const [notesArray, setNotesArray] = useState(notes);\n  function getNotes() {\n    fetch(\"http://localhost:3001/api/notes\").then(response => response.json()).then(data => {\n      let notesArr = [];\n      const notes = data.data.notes;\n      for (let i = 0; i < notes.length; i++) {\n        notesArr.push(notes[i].text);\n      }\n      setNotesArray(notesArr);\n    });\n  }\n  function postNotes(text) {\n    fetch(\"http://localhost:3001/api/notes\", {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": 'application/json'\n      },\n      body: {\n        \"text\": text\n      }\n    });\n  }\n  useEffect(() => {\n    getNotes();\n  }, []);\n  const addNewNote = enteredText => {\n    postNotes(enteredText);\n    setNotesArray(prevArray => [...prevArray, enteredText]);\n  };\n  function displayNotes() {\n    if (notesArray.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"add a note!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 14\n      }, this);\n    } else {\n      return notesArray.map((n, index) => {\n        return /*#__PURE__*/_jsxDEV(Note, {\n          text: n\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 16\n        }, this);\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Note App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewNote, {\n      onNewNote: addNewNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), displayNotes()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"L4XpuIFGWv1S/HvSpsZ9zFyVkxY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Note","NewNote","jsxDEV","_jsxDEV","notes","App","_s","notesArray","setNotesArray","getNotes","fetch","then","response","json","data","notesArr","i","length","push","text","postNotes","method","headers","body","addNewNote","enteredText","prevArray","displayNotes","children","fileName","_jsxFileName","lineNumber","columnNumber","map","n","index","onNewNote","_c","$RefreshReg$"],"sources":["/Users/ritukirsur/Coding/notes-app/react-notes-app/src/App.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Note from './components/Note';\nimport NewNote from './components/NewNote';\n\nconst notes = []\n\nfunction App() {\n  const [notesArray, setNotesArray] = useState(notes);\n\n  function getNotes() {\n    fetch(\"http://localhost:3001/api/notes\")\n      .then((response) => response.json())\n      .then((data) => {\n        let notesArr = []\n        const notes = data.data.notes\n        for (let i = 0; i < notes.length; i++) {\n          notesArr.push(notes[i].text)\n        }\n        setNotesArray(notesArr);\n      });\n  }\n\n  function postNotes(text) {\n    fetch(\"http://localhost:3001/api/notes\", {\n      method: 'POST',\n      headers: {\n          \"Content-Type\": 'application/json'\n      },\n      body: {\"text\": text}\n    })\n  }\n\n  useEffect(() => {getNotes()}, [])\n\n  const addNewNote = (enteredText) => {\n    postNotes(enteredText)\n    setNotesArray(prevArray => [...prevArray, enteredText]);\n  }\n\n  function displayNotes() {\n    if (notesArray.length === 0) {\n      return <p>add a note!</p>;\n    } else {\n      return notesArray.map((n, index) => {\n        return <Note text={n} key={index}/>;\n      })\n    }\n  }\n\n  return (\n    <div>\n      <h1>Note App</h1>\n      <NewNote onNewNote={addNewNote}/>\n      {displayNotes()}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,OAAO,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,KAAK,GAAG,EAAE;AAEhB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAACM,KAAK,CAAC;EAEnD,SAASK,QAAQA,CAAA,EAAG;IAClBC,KAAK,CAAC,iCAAiC,CAAC,CACrCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACd,IAAIC,QAAQ,GAAG,EAAE;MACjB,MAAMX,KAAK,GAAGU,IAAI,CAACA,IAAI,CAACV,KAAK;MAC7B,KAAK,IAAIY,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGZ,KAAK,CAACa,MAAM,EAAED,CAAC,EAAE,EAAE;QACrCD,QAAQ,CAACG,IAAI,CAACd,KAAK,CAACY,CAAC,CAAC,CAACG,IAAI,CAAC;MAC9B;MACAX,aAAa,CAACO,QAAQ,CAAC;IACzB,CAAC,CAAC;EACN;EAEA,SAASK,SAASA,CAACD,IAAI,EAAE;IACvBT,KAAK,CAAC,iCAAiC,EAAE;MACvCW,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAE;QAAC,MAAM,EAAEJ;MAAI;IACrB,CAAC,CAAC;EACJ;EAEApB,SAAS,CAAC,MAAM;IAACU,QAAQ,CAAC,CAAC;EAAA,CAAC,EAAE,EAAE,CAAC;EAEjC,MAAMe,UAAU,GAAIC,WAAW,IAAK;IAClCL,SAAS,CAACK,WAAW,CAAC;IACtBjB,aAAa,CAACkB,SAAS,IAAI,CAAC,GAAGA,SAAS,EAAED,WAAW,CAAC,CAAC;EACzD,CAAC;EAED,SAASE,YAAYA,CAAA,EAAG;IACtB,IAAIpB,UAAU,CAACU,MAAM,KAAK,CAAC,EAAE;MAC3B,oBAAOd,OAAA;QAAAyB,QAAA,EAAG;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAC3B,CAAC,MAAM;MACL,OAAOzB,UAAU,CAAC0B,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAK;QAClC,oBAAOhC,OAAA,CAACH,IAAI;UAACmB,IAAI,EAAEe;QAAE,GAAMC,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACrC,CAAC,CAAC;IACJ;EACF;EAEA,oBACE7B,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAAyB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjB7B,OAAA,CAACF,OAAO;MAACmC,SAAS,EAAEZ;IAAW;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EAChCL,YAAY,CAAC,CAAC;EAAA;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEV;AAAC1B,EAAA,CAlDQD,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AAoDZ,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}